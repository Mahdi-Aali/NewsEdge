@page "/User/ChangePassword"
@using NewsEdge.DTOs.Account;
@inherits OwningComponentBase<UserManager<NewsEdgeUser>>

<div class="bg-accent p-35-r mb-50 item-shadow-1">
    <div class="media-none-xs">
        @if (IsSuccess)
        {
            <div class="alert alert-success">
                رمز عبور شما با موفقیت تغییر کرد.
                <a class="btn btn-primary text-white" @onclick="@(() => NavigationManager.NavigateTo("/User"))">تائید</a>
            </div>
        }
        <EditForm Model="ChangePasswordViewModel" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator />
            <div class="input-group">
                <label>رمز عبور قبلی :</label>
                <InputText class="form-control mr-2" type="password" placeholder="Secret@123" @bind-Value="ChangePasswordViewModel.OldPassword"></InputText>
            </div>
            <br />
            <div class="input-group">
                <label>رمز عبور جدید :</label>
                <InputText class="form-control mr-2" type="password" placeholder="Secret@123" @bind-Value="ChangePasswordViewModel.NewPassword"></InputText>
            </div>
            <br />
            <div class="input-group">
                <label>تکرار رمز عبور جدید :</label>
                <InputText class="form-control mr-2" type="password" placeholder="Secret@123" @bind-Value="ChangePasswordViewModel.ConfirmNewPassword"></InputText>
            </div>
            <br />
            <ValidationMessage For="() => ChangePasswordViewModel.OldPassword" />
            <ValidationMessage For="() => ChangePasswordViewModel.NewPassword" />
            <ValidationMessage For="() => ChangePasswordViewModel.ConfirmNewPassword" />
            @if (IdentityErrors.Any())
            {
                <ul class="text-danger">
                    @foreach(var error in IdentityErrors)
                    {
                        <li>@error</li>
                    }
                </ul>
            }


            <button type="submit" class="btn btn-lg btn-success">تغییر رمز عبور</button>
        </EditForm>
    </div>
</div>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    UserManager<NewsEdgeUser> UserManager => Service;

    public NewsEdgeUser User { get; set; } = new();

    public ChangePasswordViewModel ChangePasswordViewModel { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        User = await UserManager.FindByNameAsync(await AuthenticationState.GetUserNameAsync());
    }




    public bool IsSuccess { get; set; } = false;
    public string[] IdentityErrors = new string[0];

    public async Task SubmitForm()
    {
        if(ChangePasswordViewModel.NewPassword.Equals(ChangePasswordViewModel.ConfirmNewPassword))
        {
            var result = await UserManager.ChangePasswordAsync(User, ChangePasswordViewModel.OldPassword, ChangePasswordViewModel.NewPassword);
            await UserManager.UpdateSecurityStampAsync(User);
            if (result.Succeeded)
            {
                IsSuccess = true;
            }
            else
            {
                IdentityErrors = new string[result.Errors.Count()];
                for (int index = 0; index < result.Errors.Count(); index++)
                {
                    IdentityErrors[index] = result.Errors.ElementAt(index).Description;
                }
            }
        }
        else
        {
            IdentityErrors = new string[] { "رمز های عبور باهم مغایرت دارند" };
        }
    }


}
